/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package apkbarber;

import popup.Berhasil;
import java.sql.Statement;
import java.sql.Connection;
import config.koneksi;
import javax.swing.table.DefaultTableModel;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import popup.PeringatanKosong;
import popup.PeringatanLebih;
import java.awt.Color;
import popup.BerhasilHapus;
import popup.BerhasilUpdate;
import popup.YesNoList;



/**
 *
 * @author Alxxstrdy
 */
public class PriceList extends javax.swing.JPanel {

   private final Connection conn;
   private String userID;
   
    public PriceList(String UserID) {
        initComponents();
        
        conn = koneksi.getConnection();
        setTabelModel();
        loadData();
        this.userID = UserID;
        tID.setEditable(false);
        btnDelete.setVisible(false);
        tStok.setVisible(false);
        lStok.setVisible(false);
    }
     public String getUserID() {
     return userID;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnMain = new javax.swing.JPanel();
        pnPricelist = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        btnDelete = new Palette.Panel();
        jLabel15 = new javax.swing.JLabel();
        btnAdd = new Palette.Panel();
        lTambah = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        vTabel = new javax.swing.JTable();
        pnTambah = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        tNama = new javax.swing.JTextField();
        tHarga = new javax.swing.JTextField();
        tID = new javax.swing.JTextField();
        bBatal = new Palette.Panel();
        lbatal = new javax.swing.JLabel();
        bSave = new Palette.Panel();
        lsave = new javax.swing.JLabel();
        cJenis = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();
        lStok = new javax.swing.JLabel();
        tStok = new javax.swing.JTextField();

        setPreferredSize(new java.awt.Dimension(730, 564));
        setLayout(new java.awt.CardLayout());

        pnMain.setBackground(new java.awt.Color(255, 255, 255));
        pnMain.setLayout(new java.awt.CardLayout());

        pnPricelist.setBackground(new java.awt.Color(255, 255, 255));

        jLabel8.setFont(new java.awt.Font("NEXT ART", 1, 14)); // NOI18N
        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/list1.png"))); // NOI18N

        jLabel12.setFont(new java.awt.Font("NEXT ART", 1, 14)); // NOI18N
        jLabel12.setText("list barang & jasa");

        btnDelete.setBackground(new java.awt.Color(214, 48, 49));
        btnDelete.setFocusCycleRoot(true);
        btnDelete.setRoundBottomLeft(10);
        btnDelete.setRoundBottomRight(10);
        btnDelete.setRoundTopLeft(10);
        btnDelete.setRoundTopRight(10);
        btnDelete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnDeleteMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnDeleteMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnDeleteMousePressed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("NEXT ART", 0, 14)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel15.setText("HAPUS");
        jLabel15.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        javax.swing.GroupLayout btnDeleteLayout = new javax.swing.GroupLayout(btnDelete);
        btnDelete.setLayout(btnDeleteLayout);
        btnDeleteLayout.setHorizontalGroup(
            btnDeleteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, 93, Short.MAX_VALUE)
        );
        btnDeleteLayout.setVerticalGroup(
            btnDeleteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
        );

        btnAdd.setBackground(new java.awt.Color(2, 131, 145));
        btnAdd.setFocusCycleRoot(true);
        btnAdd.setRoundBottomLeft(10);
        btnAdd.setRoundBottomRight(10);
        btnAdd.setRoundTopLeft(10);
        btnAdd.setRoundTopRight(10);
        btnAdd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnAddMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnAddMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnAddMousePressed(evt);
            }
        });

        lTambah.setFont(new java.awt.Font("NEXT ART", 0, 14)); // NOI18N
        lTambah.setForeground(new java.awt.Color(255, 255, 255));
        lTambah.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lTambah.setText("TAMBAH");
        lTambah.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        javax.swing.GroupLayout btnAddLayout = new javax.swing.GroupLayout(btnAdd);
        btnAdd.setLayout(btnAddLayout);
        btnAddLayout.setHorizontalGroup(
            btnAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lTambah, javax.swing.GroupLayout.DEFAULT_SIZE, 93, Short.MAX_VALUE)
        );
        btnAddLayout.setVerticalGroup(
            btnAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lTambah, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
        );

        vTabel.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "NAMA", "HARGA", "JENIS", "STOK"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        vTabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                vTabelMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(vTabel);

        javax.swing.GroupLayout pnPricelistLayout = new javax.swing.GroupLayout(pnPricelist);
        pnPricelist.setLayout(pnPricelistLayout);
        pnPricelistLayout.setHorizontalGroup(
            pnPricelistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnPricelistLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(pnPricelistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnPricelistLayout.createSequentialGroup()
                        .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(pnPricelistLayout.createSequentialGroup()
                        .addGroup(pnPricelistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 690, Short.MAX_VALUE)
                            .addGroup(pnPricelistLayout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel12)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(20, 20, 20))))
        );
        pnPricelistLayout.setVerticalGroup(
            pnPricelistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnPricelistLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(pnPricelistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel8)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(pnPricelistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(103, Short.MAX_VALUE))
        );

        pnMain.add(pnPricelist, "card2");

        pnTambah.setBackground(new java.awt.Color(255, 255, 255));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setText("INPUT BARANG/JASA");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel9.setText("ID BARANG/JASA");

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel10.setText("NAMA BARANG/JASA");

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel11.setText("HARGA");

        tNama.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tNamaFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                tNamaFocusLost(evt);
            }
        });
        tNama.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tNamaActionPerformed(evt);
            }
        });

        tHarga.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tHargaFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                tHargaFocusLost(evt);
            }
        });
        tHarga.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tHargaActionPerformed(evt);
            }
        });

        tID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tIDActionPerformed(evt);
            }
        });

        bBatal.setBackground(new java.awt.Color(214, 48, 49));
        bBatal.setFocusCycleRoot(true);
        bBatal.setRoundBottomLeft(10);
        bBatal.setRoundBottomRight(10);
        bBatal.setRoundTopLeft(10);
        bBatal.setRoundTopRight(10);
        bBatal.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                bBatalMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                bBatalMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                bBatalMousePressed(evt);
            }
        });

        lbatal.setFont(new java.awt.Font("NEXT ART", 0, 14)); // NOI18N
        lbatal.setForeground(new java.awt.Color(255, 255, 255));
        lbatal.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbatal.setText("BATAl");
        lbatal.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        javax.swing.GroupLayout bBatalLayout = new javax.swing.GroupLayout(bBatal);
        bBatal.setLayout(bBatalLayout);
        bBatalLayout.setHorizontalGroup(
            bBatalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lbatal, javax.swing.GroupLayout.DEFAULT_SIZE, 93, Short.MAX_VALUE)
        );
        bBatalLayout.setVerticalGroup(
            bBatalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lbatal, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
        );

        bSave.setBackground(new java.awt.Color(2, 131, 145));
        bSave.setFocusCycleRoot(true);
        bSave.setRoundBottomLeft(10);
        bSave.setRoundBottomRight(10);
        bSave.setRoundTopLeft(10);
        bSave.setRoundTopRight(10);
        bSave.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                bSaveMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                bSaveMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                bSaveMousePressed(evt);
            }
        });

        lsave.setFont(new java.awt.Font("NEXT ART", 0, 14)); // NOI18N
        lsave.setForeground(new java.awt.Color(255, 255, 255));
        lsave.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lsave.setText("SIMPAN");
        lsave.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        javax.swing.GroupLayout bSaveLayout = new javax.swing.GroupLayout(bSave);
        bSave.setLayout(bSaveLayout);
        bSaveLayout.setHorizontalGroup(
            bSaveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lsave, javax.swing.GroupLayout.DEFAULT_SIZE, 93, Short.MAX_VALUE)
        );
        bSaveLayout.setVerticalGroup(
            bSaveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lsave, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
        );

        cJenis.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "BARANG", "JASA" }));
        cJenis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cJenisActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel13.setText("JENIS");

        lStok.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lStok.setText("STOK");

        javax.swing.GroupLayout pnTambahLayout = new javax.swing.GroupLayout(pnTambah);
        pnTambah.setLayout(pnTambahLayout);
        pnTambahLayout.setHorizontalGroup(
            pnTambahLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnTambahLayout.createSequentialGroup()
                .addGap(0, 498, Short.MAX_VALUE)
                .addComponent(bSave, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(bBatal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34))
            .addGroup(pnTambahLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(pnTambahLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lStok)
                    .addComponent(jLabel13)
                    .addComponent(jLabel4)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11)
                    .addComponent(tNama)
                    .addComponent(tHarga, javax.swing.GroupLayout.DEFAULT_SIZE, 388, Short.MAX_VALUE)
                    .addComponent(tID)
                    .addComponent(cJenis, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tStok))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnTambahLayout.setVerticalGroup(
            pnTambahLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnTambahLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel4)
                .addGap(77, 77, 77)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tNama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel11)
                .addGap(10, 10, 10)
                .addComponent(tHarga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel13)
                .addGap(7, 7, 7)
                .addComponent(cJenis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lStok)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tStok, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 94, Short.MAX_VALUE)
                .addGroup(pnTambahLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bSave, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bBatal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22))
        );

        pnMain.add(pnTambah, "card3");

        add(pnMain, "card2");
    }// </editor-fold>//GEN-END:initComponents

    private void tHargaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tHargaFocusGained

    }//GEN-LAST:event_tHargaFocusGained

    private void tHargaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tHargaFocusLost

    }//GEN-LAST:event_tHargaFocusLost

    private void tHargaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tHargaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tHargaActionPerformed

    private void tNamaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tNamaFocusGained

    }//GEN-LAST:event_tNamaFocusGained

    private void tNamaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tNamaFocusLost

    }//GEN-LAST:event_tNamaFocusLost

    private void tNamaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tNamaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tNamaActionPerformed

    private void tIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tIDActionPerformed

    private void bBatalMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bBatalMouseEntered
        bBatal.setBackground(new Color(218,69,70));
    }//GEN-LAST:event_bBatalMouseEntered

    private void bBatalMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bBatalMouseExited
        bBatal.setBackground(new Color(214,48,49));
    }//GEN-LAST:event_bBatalMouseExited

    private void bBatalMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bBatalMousePressed
        pnMain.removeAll();
        pnMain.add(new Home(getUserID()));
        pnMain.repaint();
        pnMain.revalidate();
    }//GEN-LAST:event_bBatalMousePressed

    private void bSaveMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bSaveMouseEntered
        bSave.setBackground(new Color (2,154,170));
    }//GEN-LAST:event_bSaveMouseEntered

    private void bSaveMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bSaveMouseExited
        bSave.setBackground(new Color (2,131,145));
    }//GEN-LAST:event_bSaveMouseExited

    private void bSaveMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bSaveMousePressed
        if (tNama.getText().length()>=20){
            boolean closable = true;
            PeringatanLebih data = new PeringatanLebih(null, closable);
            data.setVisible(true);
            tNama.setText(null);
            tHarga.setText(null);
            cJenis.setSelectedItem(null);
            tStok.setText(null);
        } else if(tNama.getText().equals("")) {
            boolean closable = true;
            PeringatanKosong data = new PeringatanKosong(null, closable);
            data.setVisible(true);
            tNama.setText(null);
            tHarga.setText(null);
            cJenis.setSelectedItem(null);
            tStok.setText(null);
        } else if(tHarga.getText().equals("")){
            boolean closable = true;
            PeringatanKosong data = new PeringatanKosong(null, closable);
            data.setVisible(true);
            tNama.setText(null);
            tHarga.setText(null);
            cJenis.setSelectedItem(null);
            tStok.setText(null);
        } else if(cJenis.getSelectedItem().equals(null)){
            boolean closable = true;
            PeringatanKosong data = new PeringatanKosong(null, closable);
            data.setVisible(true);
            tNama.setText(null);
            tHarga.setText(null);
            cJenis.setSelectedItem(null);
            tStok.setText(null);
        }
        
        
        
        
        if (lsave.getText().equals("SIMPAN")) {
            insertData();
        } else if (lsave.getText().equals("PERBARUI")) {
            updateData();
            lsave.setText("SIMPAN");
            if (lTambah.getText().equals("UBAH")) {
            lTambah.setText("TAMBAH");

            }
       }
     
    }//GEN-LAST:event_bSaveMousePressed

    private void btnDeleteMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDeleteMouseEntered
        btnDelete.setBackground(new Color(218,69,70));
    }//GEN-LAST:event_btnDeleteMouseEntered

    private void btnDeleteMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDeleteMouseExited
        btnDelete.setBackground(new Color(214,48,49));
    }//GEN-LAST:event_btnDeleteMouseExited

    private void btnDeleteMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDeleteMousePressed
        boolean closable = true;
        YesNoList data = new YesNoList(null, closable, this);
        data.setVisible(true);
        

        if (lTambah.getText().equals("UBAH")) {
            lTambah.setText("TAMBAH");
            btnDelete.setVisible(false);
        }
    }//GEN-LAST:event_btnDeleteMousePressed

    private void btnAddMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAddMouseEntered
        btnAdd.setBackground(new Color (2,154,170));
    }//GEN-LAST:event_btnAddMouseEntered

    private void btnAddMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAddMouseExited
        btnAdd.setBackground(new Color (2,131,145));
    }//GEN-LAST:event_btnAddMouseExited

    private void btnAddMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAddMousePressed
        id();
        pnMain.removeAll();
        pnMain.add(pnTambah);
        pnMain.repaint();;
        pnMain.revalidate();
        
        
         if (lTambah.getText().equals("UBAH")) {
            dataTabel();
            lsave.setText("PERBARUI");
                    }
            
            if(cJenis.getSelectedItem().equals("BARANG")){
                tStok.setVisible(true);
                lStok.setVisible(true);
            }
            
    }//GEN-LAST:event_btnAddMousePressed

    private void cJenisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cJenisActionPerformed
        if(cJenis.getSelectedItem().equals("BARANG")){
                tStok.setVisible(true);
                lStok.setVisible(true);
            }else if(cJenis.getSelectedItem().equals("JASA")){
                tStok.setVisible(false);
                lStok.setVisible(false);
            }
    }//GEN-LAST:event_cJenisActionPerformed

    private void vTabelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_vTabelMousePressed
        if (lTambah.getText().equals("TAMBAH")) {
            lTambah.setText("UBAH");
            btnDelete.setVisible(true);

        }
    }//GEN-LAST:event_vTabelMousePressed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private Palette.Panel bBatal;
    private Palette.Panel bSave;
    private Palette.Panel btnAdd;
    private Palette.Panel btnDelete;
    private javax.swing.JComboBox<String> cJenis;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lStok;
    private javax.swing.JLabel lTambah;
    private javax.swing.JLabel lbatal;
    private javax.swing.JLabel lsave;
    private javax.swing.JPanel pnMain;
    private javax.swing.JPanel pnPricelist;
    private javax.swing.JPanel pnTambah;
    private javax.swing.JTextField tHarga;
    private javax.swing.JTextField tID;
    private javax.swing.JTextField tNama;
    private javax.swing.JTextField tStok;
    private javax.swing.JTable vTabel;
    // End of variables declaration//GEN-END:variables

 
   private void setTabelModel() {
        DefaultTableModel model = (DefaultTableModel) vTabel.getModel();
    }

    private void loadData() {
      getData((DefaultTableModel) vTabel.getModel());
    }

    private void getData(DefaultTableModel model) {
        model.setRowCount(0);
        
        try {
            String sql = "SELECT * FROM barang_jasa ORDER BY id_barjas DESC";
            try (PreparedStatement st = conn.prepareStatement(sql)){
                ResultSet rs = st.executeQuery();
                
                while (rs.next()){
                    String idBJ = rs.getString("id_barjas");
                    String namaBJ = rs.getString("nama_barjas");
                    int harga = rs.getInt("harga");
                    String jenis = rs.getString("jenis_barjas");
                    int stok = rs.getInt("stok");
                            
                    Object[] rowdata = {idBJ, namaBJ, harga, jenis, stok};
                    model.addRow(rowdata);
                }
            } 
        } catch (SQLException e) {
            Logger.getLogger(PriceList.class.getName()).log(Level.SEVERE, null, e);
        }
    }
    
    public void id()
    {
        try {
            
            Statement s = conn.createStatement();
            ResultSet rs = s.executeQuery("SELECT MAX(id_barjas) FROM barang_jasa");
            rs.next();
            rs.getString("MAX(id_barjas)");
            if (rs.getString("MAX(id_barjas)") == null) {
                tID.setText("BJ00001");     
            } else {
                long id = Long.parseLong(rs.getString("MAX(id_barjas)").substring(2, rs.getString("MAX(id_barjas)").length()));
                id++;
                tID.setText("BJ" + String.format("%05d", id));
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }      
    }

    private void insertData() {

        
        String idBarjas = tID.getText();
        String namaBarjas = tNama.getText()+" ";
        int harga = Integer.parseInt(tHarga.getText());
        String jenis = cJenis.getSelectedItem().toString();
        int stok = Integer.parseInt(tStok.getText());
        
        try {
            String sql = "INSERT INTO barang_jasa (id_barjas, nama_barjas, harga, jenis_barjas, stok) VALUES (?,?,?,?,?)";
            try(PreparedStatement st = conn.prepareStatement(sql)) {
                st.setString(1, idBarjas);
                st.setString(2, namaBarjas);
                st.setInt(3, harga);
                st.setString(4, jenis);
                st.setInt(5, stok);
                
                int rowInserted = st.executeUpdate();
                if (rowInserted > 0){
                boolean closable = true;
                Berhasil data = new Berhasil(null, closable);
                data.setVisible(true);
                    resetForm();
                    loadData();
                    showTable();
                }
            } 
        } catch (SQLException e) {
            Logger.getLogger(PriceList.class.getName()).log(Level.SEVERE, null, e);
        }
    }

    private void resetForm() {
        tID.setText(null);
        tNama.setText(null);
        tHarga.setText(null);
    }

    private void showTable() {
        pnMain.removeAll();
        pnMain.add(pnPricelist);
        pnMain.repaint();
        pnMain.revalidate();  
    }
        public void deleteData() {
        int selectedRow = vTabel.getSelectedRow();
        
            String id = vTabel.getValueAt(selectedRow, 0).toString();
            try {
                String sql = "DELETE FROM barang_jasa WHERE id_barjas=?";
                try (PreparedStatement st = conn.prepareStatement(sql)) {
                    st.setString(1, id);

                    int rowDeleted = st.executeUpdate();
                    if (rowDeleted > 0) {
                        boolean closable = true;
                        BerhasilHapus data = new BerhasilHapus(null, closable);
                        data.setVisible(true);

                    } else {
                        JOptionPane.showMessageDialog(this, "Data Gagal Dihapus");
                    }
                }
            } catch (SQLException e) {
                Logger.getLogger(Reservasi.class.getName()).log(Level.SEVERE, null, e);
            }
         
        resetForm();
        loadData();
        pnMain.removeAll();
        pnMain.add(pnPricelist);
        pnMain.repaint();
        pnMain.revalidate();


        
    }
        
     private void updateData() {

        String id = tID.getText();
        String nama = tNama.getText();
        String harga = tHarga.getText();
        String jenis = cJenis.getSelectedItem().toString();
        String stok = tStok.getText();

        try {

            String sql = "UPDATE barang_jasa SET nama_barjas=?, harga=?, jenis_barjas=?, stok=? WHERE id_barjas =?";

            PreparedStatement st = conn.prepareStatement(sql);

            st.setString(1, nama);
            st.setString(2, harga);
            st.setString(3, jenis);
            st.setString(4, stok);
            st.setString(5, id);

            int rowUpdated = st.executeUpdate();
            if (rowUpdated > 0) {

            boolean closable = true;
            BerhasilUpdate data = new BerhasilUpdate(null, closable);
            data.setVisible(true);
            tNama.setText(null);

                resetForm();
                loadData();
                pnMain.removeAll();
                pnMain.add(pnPricelist);
                pnMain.repaint();
                pnMain.revalidate();
                lTambah.setText("TAMBAH");
                btnDelete.setVisible(false);
            }

        } catch (SQLException e) {
            Logger.getLogger(Reservasi.class.getName()).log(Level.SEVERE, null, e);
        }
    }        
        
         private void dataTabel() {

        int row = vTabel.getSelectedRow();
        
        tID.setText(vTabel.getValueAt(row, 0).toString());
        tNama.setText(vTabel.getValueAt(row, 1).toString());
        tHarga.setText(vTabel.getValueAt(row, 2).toString());
        String Jenis = vTabel.getValueAt(row, 3).toString()!= null ? vTabel.getValueAt(row, 3).toString() : null;
        if (Jenis == null) {
        cJenis.setSelectedItem(null);
        }else if(Jenis == "BARANG"){
        cJenis.setSelectedIndex(0);
        
        }else if(Jenis == "JENIS"){
        cJenis.setSelectedIndex(1);
        }
        
        String Stok = vTabel.getValueAt(row, 4).toString()!= null ? vTabel.getValueAt(row, 4).toString() : null;
        tStok.setText(Stok != null ? Stok : "");
         
        cJenis.setSelectedItem(Jenis);
         }
}
